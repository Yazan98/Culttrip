plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id 'java'
    id 'war'
}

group = 'com.yazan98.destiny.server'
version = '0.0.2-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url  "https://dl.bintray.com/yt98/Vortex" }
}

ext {
    set('springCloudVersion', "Hoxton.BUILD-SNAPSHOT")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
//    testImplementation 'org.springframework.security:spring-security-test'

    implementation "io.vortex:vortex-spring-boot:1.0.11"

    implementation "io.springfox:springfox-bean-validators:2.9.2"
    implementation "io.springfox:springfox-swagger-ui:2.9.1"
    implementation "io.springfox:springfox-swagger2:2.9.1"
    implementation "io.springfox:springfox-spring-web:2.9.2"
    compile group: 'org.springframework', name: 'spring-core', version: '5.2.2.RELEASE'

    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.security:spring-security-crypto"
    implementation "org.springframework.security:spring-security-core:5.1.2.RELEASE"
    implementation "org.springframework.security:spring-security-config:5.1.2.RELEASE"
    implementation "io.jsonwebtoken:jjwt:0.6.0"
    implementation group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.3.7.RELEASE'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.1.51'

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation "org.jsondoc:spring-boot-starter-jsondoc:1.2.22"
    implementation "org.jsondoc:jsondoc-ui-webjar:1.2.22"
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'com.google.firebase:firebase-admin:6.11.0'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

jar {
    enabled = true
}

bootJar {
    classifier = 'boot'
    requiresUnpack '**/destiny-server-*.jar'
}

bootJar {
    mainClassName = 'com.yazan98.destiny.server.DestinyApplication'
    manifest {
        attributes 'Start-Class': 'com.yazan98.destiny.server.DestinyApplication'
    }
}

springBoot {
    mainClassName = 'com.yazan98.destiny.server.DestinyApplication'
}
